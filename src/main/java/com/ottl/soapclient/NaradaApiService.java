
package com.ottl.soapclient;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NaradaApiService", targetNamespace = "http://services.api.ycs.com", wsdlLocation = "https://uat2.yalamanchili.in/yseapiservices/services/NaradaApiService?wsdl")
public class NaradaApiService
    extends Service
{

    private final static URL NARADAAPISERVICE_WSDL_LOCATION;
    private final static WebServiceException NARADAAPISERVICE_EXCEPTION;
    private final static QName NARADAAPISERVICE_QNAME = new QName("http://services.api.ycs.com", "NaradaApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://uat2.yalamanchili.in/yseapiservices/services/NaradaApiService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NARADAAPISERVICE_WSDL_LOCATION = url;
        NARADAAPISERVICE_EXCEPTION = e;
    }

    public NaradaApiService() {
        super(__getWsdlLocation(), NARADAAPISERVICE_QNAME);
    }

    public NaradaApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), NARADAAPISERVICE_QNAME, features);
    }

    public NaradaApiService(URL wsdlLocation) {
        super(wsdlLocation, NARADAAPISERVICE_QNAME);
    }

    public NaradaApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NARADAAPISERVICE_QNAME, features);
    }

    public NaradaApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NaradaApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NaradaApiServicePortType
     */
    @WebEndpoint(name = "NaradaApiServiceHttpSoap11Endpoint")
    public NaradaApiServicePortType getNaradaApiServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://services.api.ycs.com", "NaradaApiServiceHttpSoap11Endpoint"), NaradaApiServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NaradaApiServicePortType
     */
    @WebEndpoint(name = "NaradaApiServiceHttpSoap11Endpoint")
    public NaradaApiServicePortType getNaradaApiServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.api.ycs.com", "NaradaApiServiceHttpSoap11Endpoint"), NaradaApiServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NARADAAPISERVICE_EXCEPTION!= null) {
            throw NARADAAPISERVICE_EXCEPTION;
        }
        return NARADAAPISERVICE_WSDL_LOCATION;
    }

}
